//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WeatherApp.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeteoInfo", Namespace="http://schemas.datacontract.org/2004/07/WeatherService.Model")]
    [System.SerializableAttribute()]
    public partial class MeteoInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherApp.ServiceReference1.DayMeteoInfo CurrentDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WeatherApp.ServiceReference1.DayMeteoInfo[] DaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EveningTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MorningTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentCity {
            get {
                return this.CurrentCityField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentCityField, value) != true)) {
                    this.CurrentCityField = value;
                    this.RaisePropertyChanged("CurrentCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherApp.ServiceReference1.DayMeteoInfo CurrentDay {
            get {
                return this.CurrentDayField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentDayField, value) != true)) {
                    this.CurrentDayField = value;
                    this.RaisePropertyChanged("CurrentDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WeatherApp.ServiceReference1.DayMeteoInfo[] Days {
            get {
                return this.DaysField;
            }
            set {
                if ((object.ReferenceEquals(this.DaysField, value) != true)) {
                    this.DaysField = value;
                    this.RaisePropertyChanged("Days");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EveningTime {
            get {
                return this.EveningTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.EveningTimeField, value) != true)) {
                    this.EveningTimeField = value;
                    this.RaisePropertyChanged("EveningTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MorningTime {
            get {
                return this.MorningTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.MorningTimeField, value) != true)) {
                    this.MorningTimeField = value;
                    this.RaisePropertyChanged("MorningTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DayMeteoInfo", Namespace="http://schemas.datacontract.org/2004/07/WeatherService.Model")]
    [System.SerializableAttribute()]
    public partial class DayMeteoInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HumidityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MetcastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WindField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WindDirectionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Day {
            get {
                return this.DayField;
            }
            set {
                if ((object.ReferenceEquals(this.DayField, value) != true)) {
                    this.DayField = value;
                    this.RaisePropertyChanged("Day");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Humidity {
            get {
                return this.HumidityField;
            }
            set {
                if ((object.ReferenceEquals(this.HumidityField, value) != true)) {
                    this.HumidityField = value;
                    this.RaisePropertyChanged("Humidity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Metcast {
            get {
                return this.MetcastField;
            }
            set {
                if ((object.ReferenceEquals(this.MetcastField, value) != true)) {
                    this.MetcastField = value;
                    this.RaisePropertyChanged("Metcast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pressure {
            get {
                return this.PressureField;
            }
            set {
                if ((object.ReferenceEquals(this.PressureField, value) != true)) {
                    this.PressureField = value;
                    this.RaisePropertyChanged("Pressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Temperature {
            get {
                return this.TemperatureField;
            }
            set {
                if ((object.ReferenceEquals(this.TemperatureField, value) != true)) {
                    this.TemperatureField = value;
                    this.RaisePropertyChanged("Temperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Wind {
            get {
                return this.WindField;
            }
            set {
                if ((object.ReferenceEquals(this.WindField, value) != true)) {
                    this.WindField = value;
                    this.RaisePropertyChanged("Wind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WindDirection {
            get {
                return this.WindDirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.WindDirectionField, value) != true)) {
                    this.WindDirectionField = value;
                    this.RaisePropertyChanged("WindDirection");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cities", Namespace="http://schemas.datacontract.org/2004/07/WeatherService.Model")]
    [System.SerializableAttribute()]
    public partial class Cities : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IWeatherService")]
    public interface IWeatherService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/GetWeather", ReplyAction="http://tempuri.org/IWeatherService/GetWeatherResponse")]
        WeatherApp.ServiceReference1.MeteoInfo GetWeather(string city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/GetWeather", ReplyAction="http://tempuri.org/IWeatherService/GetWeatherResponse")]
        System.Threading.Tasks.Task<WeatherApp.ServiceReference1.MeteoInfo> GetWeatherAsync(string city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/GetCities", ReplyAction="http://tempuri.org/IWeatherService/GetCitiesResponse")]
        WeatherApp.ServiceReference1.Cities[] GetCities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWeatherService/GetCities", ReplyAction="http://tempuri.org/IWeatherService/GetCitiesResponse")]
        System.Threading.Tasks.Task<WeatherApp.ServiceReference1.Cities[]> GetCitiesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWeatherServiceChannel : WeatherApp.ServiceReference1.IWeatherService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WeatherServiceClient : System.ServiceModel.ClientBase<WeatherApp.ServiceReference1.IWeatherService>, WeatherApp.ServiceReference1.IWeatherService {
        
        public WeatherServiceClient() {
        }
        
        public WeatherServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WeatherServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeatherServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WeatherApp.ServiceReference1.MeteoInfo GetWeather(string city) {
            return base.Channel.GetWeather(city);
        }
        
        public System.Threading.Tasks.Task<WeatherApp.ServiceReference1.MeteoInfo> GetWeatherAsync(string city) {
            return base.Channel.GetWeatherAsync(city);
        }
        
        public WeatherApp.ServiceReference1.Cities[] GetCities() {
            return base.Channel.GetCities();
        }
        
        public System.Threading.Tasks.Task<WeatherApp.ServiceReference1.Cities[]> GetCitiesAsync() {
            return base.Channel.GetCitiesAsync();
        }
    }
}
